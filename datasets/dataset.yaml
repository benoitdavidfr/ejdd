$schema: 'http://json-schema.org/draft-07/schema#'
$id: 'https://dataset.geoapi.fr/dataset.yaml'
title: Méta schéma des JdD
description: |
  Tout schéma fourni à la construction d'un JdD doit être conforme à ce schéma.
  Ce schéma peut être plus ou moins détaillé. Voir dans la doc de schema.inc.php les niveaux de complétude d'un schéma.
definitions:
  itemIsValue:
    description: type d'item qui est une valeur de type string, l'item a un champ type qui vaut 'string'
    type: object
    additionalProperties: false
    required: [type]
    properties:
      type:
        const: string
      description:
        type: string
  itemIsTuple:
    description: |
      type d'item qui est un n-uplet.
      Seul le type est obligatoire et doit valoir 'object'. Les autres props dont properties ne sont pas obligatoires.
    type: object
    additionalProperties: false
    required: [type]
    properties:
      type:
        const: object
      description:
        type: string
      required:
        description: liste des champs requis dans le tuple
        type: array
        items:
          type: string
      additionalProperties:
        enum: [false, true]
      properties:
        description: liste des champs du tuple, indexés sur leur nom
        type: object
        additionalProperties: false
        patternProperties:
          '^[a-zA-Zéèàîçôù][-a-zA-Z0-9éèàîçôù_]*$':
            oneOf:
              - description: cas d'un champ défini uniquement par son nom
                type: 'null'
              - description: cas d'un champ défini
                type: object
                additionalProperties: false
                properties:
                  type:
                    oneOf:
                      - description: cas d'un type de champ simple comme par ex. string
                        type: string
                      - description: cas d'un champ défini par une union de types, par ex. string|null
                        type: array
                        items:
                          type: string
                  description:
                    type: string
                  pattern:
                    type: string
                  enum:
                    type: array
                    items:
                      type: string
                  $ref:
                    description: Pour les champs dont le type est défini dans les définitions
                    type: string
                  additionalProperties:
                    enum: [true, false]
                  required:
                    type: array
                    items:
                      type: string
                  properties:
                    description: Pour les champs défini par un object, comme par ex. les géométries GeoJSON
                    type: object
      propertiesForGeoJSON:
        description: liste des champs affichés dans la carte
        type: array
        items:
          type: string
  itemIsTupleOneOf:
    description: type d'item qui est n-uplet décrit avec plusieurs types possibles
    type: object
    additionalProperties: false
    required: [oneOf]
    properties:
      oneOf:
        type: array
      description:
        type: string
  itemType:
    description: |
      définition du type des items: valeur atomique, n-uplet ou n-uplet OneOf.
    oneOf:
      - description: l'item est une valeur de type string
        $ref: '#/definitions/itemIsValue'
      - description: item = n-uplet
        $ref: '#/definitions/itemIsTuple'
      - description: item = n-uplet OneOf
        $ref: '#/definitions/itemIsTupleOneOf'
  collectionIsADict:
    description: |
      Cas d'une collection dictOfTuples ou dictOfValues.
      Au niveau 1, title, description et type doivent être définis.
      La prop. patternProperties n'est pas forcément définie mais si elle l'est alors elle définit le pattern de la clé
      et si l'item est une valeur ou un n-uplet.
      Je ne sais pas dire que la valeur doit être un itemType. Je teste une solution !
    type: object
    required:
      - title
      - description
      - type
      #- additionalProperties
      #- patternProperties
    properties:
      title:
        type: string
      description:
        type: string
      type:
        const: object
      additionalProperties:
        const: false
      patternProperties:
        type: object
        patternProperties:
          '.*':
            $ref: '#/definitions/itemType'
  collectionIsAList:
    description: |
      Cas d'une collection listOfTuples ou listOfValues.
      Au niveau 1, title, description et type doivent être définis.
      La prop. items n'est pas forcément définie mais si elle l'est alors elle définit une valeur ou un n-uplet.
    required:
      - title
      - description
      - type
    additionalProperties: false
    properties:
      title:
        description: 
        type: string
      description:
        type: string
      # Ttes les coords étant fournies en WGS84 LonLat, la fourniture du defaultCRS est inutile
      #defaultCRS:
      #  description: Pour une collection géoréférencée, le système de coordonnées par défaut comme URN OGC
      #  type: string
      bbox:
        description: Pour une collection géoréférencée, le BBox comme array des 4 coord. géo. lonMin, latMin, lonMax, latMax
        type: array
        items:
          type: number
      type:
        const: array
      items:
        $ref: '#/definitions/itemType'
  collectionType:
    oneOf:
      - $ref: '#/definitions/collectionIsADict'
      - $ref: '#/definitions/collectionIsAList'
type: object
required:
  - $schema
  - title
  - description
  - type
  - required
  - additionalProperties
  - properties
properties:
  $schema:
    description: Le méta-schéma du schéma
    const: 'http://json-schema.org/draft-07/schema#'
  title:
    description: Titre du JdD
    type: string
  description:
    description: Description du JdD
    type: string
  type:
    description: toujours object
    const: object
  required:
    description: Liste des collections du JdD + le champ $schema
    type: array
    items:
      type: string
  additionalProperties:
    description: 'toujours false'
    const: false
  properties:
    description: La définition des collections du JdD, de leur type, et de la prop. $schema
    type: object
    additionalProperties: false
    required:
      - $schema
    properties:
      $schema:
        type: object
        required:
          - description
          - type
        properties:
          description:
            type: string
          type:
            const: object
    patternProperties:
      '^[a-zA-Z]+':
        $ref: '#/definitions/collectionType'
eof:
